name: Build & publish paper figures

on:
  workflow_dispatch:
  push:
    paths:
      - 'scripts/**'
      - 'requirements.txt'
      - 'run_report.json'
      - 'paper*/**/*.tex'
      - '.github/workflows/fig-autobuild.yml'

permissions:
  contents: write   # allow the bot to commit to your repo

env:
  MPLBACKEND: Agg   # headless matplotlib

jobs:
  build-figs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (debug)
        run: |
          echo "::group::TREE"
          ls -la
          echo
          find . -maxdepth 3 -type f | sort
          echo "::endgroup::"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps (numpy/matplotlib)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install numpy matplotlib
          fi
          python -c "import numpy, matplotlib; print('OK', numpy.__version__, matplotlib.__version__)"

      - name: Ensure run_report.json exists (fallback minimal content)
        run: |
          if [ ! -f run_report.json ]; then
            python - <<'PY'
import json
rr={"paper1":{
  "interval_L":[0.52,0.30,0.13,0.05],
  "mm_dimension":{"N":[1024,2048,4096,8192],
                  "median":[3.95,3.98,4.01,4.00],
                  "iqr":[0.20,0.14,0.10,0.08]},
  "rate_stability":{"N":[1024,2048,4096,8192],
                    "link_med":[0.120,0.118,0.119,0.118],
                    "link_iqr":[0.015,0.012,0.010,0.009],
                    "deg_in_med":[4.2,4.1,4.0,3.95],
                    "deg_in_iqr":[0.8,0.7,0.6,0.55],
                    "deg_out_med":[4.1,4.0,3.95,3.9],
                    "deg_out_iqr":[0.8,0.7,0.6,0.55]}}}
open("run_report.json","w").write(json.dumps(rr,indent=2))
print("Wrote minimal run_report.json")
PY
          fi
          echo "---- run_report.json ----"
          cat run_report.json

      - name: Generate paper figures
        run: |
          python scripts/generate_paper_figs.py

      - name: Show generated files (debug)
        run: |
          echo "::group::PAPER1"; ls -l paper1/figs || true; echo "::endgroup::"
          echo "::group::PAPER2"; ls -l paper2/figs || true; echo "::endgroup::"
          echo "::group::PAPER3"; ls -l paper3/figs || true; echo "::endgroup::"

      - name: Commit updated figures (skip if branch protected)
        id: commit
        continue-on-error: true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add paper*/figs/*.png 2>/dev/null || true
          if ! git diff --cached --quiet; then
            git commit -m "CI: regenerate paper figures"
            git push
            echo "pushed=true" >> $GITHUB_OUTPUT
          else
            echo "No figure updates."
            echo "pushed=false" >> $GITHUB_OUTPUT

      - name: Upload figures as artifact (if push didnâ€™t happen)
        if: steps.commit.outputs.pushed != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: generated-figs
          path: |
            paper1/figs/*.png
            paper2/figs/*.png
            paper3/figs/*.png
          if-no-files-found: warn
